<!DOCTYPE html>
<html lang="pt-BR">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Home</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
  <style>
    body {
      overflow-x: hidden;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-color: #f0f2f7;
    }

    #sidebar {
      width: 280px;
      min-height: 100vh;
      background: linear-gradient(135deg, #223343, #1a2b3c);
      color: #e6ebf1;
      position: fixed;
      top: 0;
      left: 0;
      transition: transform 0.35s ease, width 0.35s ease;
      overflow-y: auto;
      box-shadow: 2px 0 12px rgba(0, 0, 0, 0.3);
      z-index: 1040;
      display: flex;
      flex-direction: column;
    }

    #sidebar.collapsed {
      transform: translateX(-260px);
      width: 60px;
      overflow-x: visible;
    }

    #sidebar .sidebar-header {
      font-weight: 700;
      font-size: 1.6rem;
      padding: 1.5rem 1.5rem;
      border-bottom: 1px solid #374259;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    #sidebar.collapsed .sidebar-header {
      padding-left: 0.7rem;
      font-size: 1.25rem;
    }

    #sidebar nav {
      flex-grow: 1;
      display: flex;
      flex-direction: column;
      padding-top: 1rem;
    }

    .nav-link {
      color: #aabbcc;
      font-weight: 600;
      padding: 0.75rem 1.5rem;
      border-left: 4px solid transparent;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      transition: background-color 0.3s, border-color 0.3s, color 0.3s;
      cursor: pointer;
      display: flex;
      align-items: center;
    }

    .nav-link .icon {
      font-size: 1.25rem;
      margin-right: 1rem;
      min-width: 24px;
      text-align: center;
    }

    .nav-link:hover,
    .nav-link.active {
      background-color: #2d4363;
      border-left-color: #4979d5;
      color: #e6ebf1;
      text-decoration: none;
    }

    #sidebar.collapsed .nav-link .text {
      display: none;
    }

    /* Submenu */
    .submenu {
      padding-left: 3.5rem;
      font-weight: normal;
      font-size: 0.9rem;
      display: none;
      flex-direction: column;
    }

    .submenu.show {
      display: flex;
    }

    .submenu .nav-link {
      border: none;
      padding: 0.4rem 1rem;
      color: #94a1b2;
    }

    .submenu .nav-link:hover,
    .submenu .nav-link.active {
      background-color: transparent;
      color: #4979d5;
      text-decoration: underline;
      border: none;
    }

    /* Toggle Button */
    #toggleSidebar {
      position: fixed;
      top: 1.5rem;
      left: 280px;
      padding: 0.5rem 0.8rem;
      border: none;
      background-color: #4979d5;
      color: white;
      border-radius: 0 12px 12px 0;
      cursor: pointer;
      font-size: 1.3rem;
      box-shadow: 0 3px 12px rgb(73 121 213 / 0.7);
      transition: left 0.35s ease, width 0.35s ease, font-size 0.3s ease;
      z-index: 1050;
      display: flex;
      align-items: center;
      justify-content: center;
      user-select: none;
      white-space: nowrap;
    }

    #toggleSidebar.collapsed {
      left: 60px;
      width: 140px;
      font-size: 1rem;
      padding-left: 1rem;
      justify-content: start;
      border-radius: 0 12px 12px 0;
    }

    /* Main content */
    #content-area {
      margin-left: 280px;
      padding: 2rem 2rem 2rem 2rem;
      transition: margin-left 0.35s ease;
    }

    #content-area.expanded {
      margin-left: 60px;
    }

    /* Cards */
    .cards .card {
      cursor: pointer;
      transition: all 0.25s ease;
      border-radius: 12px;
      box-shadow: 0 4px 8px rgb(0 0 0 / 0.1);
      border: none;
      background-color: #ffffff;
    }

    .cards .card:hover {
      box-shadow: 0 12px 25px rgb(0 0 0 / 0.15);
      transform: translateY(-6px);
    }

    .card-title {
      font-weight: 700;
      color: #223343;
    }

    .card-text {
      color: #4a4a4a;
      font-size: 0.95rem;
      line-height: 1.3;
    }

    .card-btn {
      background-color: #4979d5;
      border: none;
      color: white;
      border-radius: 0.375rem;
      padding: 0.4rem 1.2rem;
      transition: background-color 0.3s ease;
    }

    .card-btn:hover,
    .card-btn:focus {
      background-color: #365f9a;
      outline: none;
    }

    @media (max-width: 767px) {
      #sidebar {
        transform: translateX(-280px);
        width: 280px;
      }

      #sidebar.collapsed {
        width: 280px;
        transform: translateX(-280px);
      }

      #content-area {
        margin-left: 0 !important;
        padding: 1rem;
      }

      #toggleSidebar {
        left: 1rem !important;
      }
    }
  </style>
</head>

<body>

  <aside id="sidebar" aria-label="Barra lateral principal">
    <div class="sidebar-header" title="Projeto NotaDez">Projeto NotaDez</div>
    <nav>
      <a href="#" class="nav-link active" tabindex="0">
        <span class="icon">üè†</span><span class="text">Home</span>
      </a>

      <a href="javascript:void(0);" class="nav-link" id="funcionalidadesToggle" aria-expanded="false" aria-controls="funcionalidadesSubmenu" tabindex="0">
        <span class="icon">üìã</span><span class="text">Funcionalidades</span>
        <span style="margin-left:auto; font-weight: 600; font-size: 0.85rem;">‚ñ∏</span>
      </a>
      <div class="submenu" id="funcionalidadesSubmenu" aria-label="Submenu funcionalidades">
        <a href="#" class="nav-link" tabindex="0">Gerenciar Notas</a>
        <a href="#" class="nav-link" tabindex="0">Relat√≥rios</a>
        <a href="#" class="nav-link" tabindex="0">Configura√ß√µes Avan√ßadas</a>
      </div>

      <a href="#" class="nav-link" tabindex="0"><span class="icon">üìö</span><span class="text">Documenta√ß√£o</span></a>
      <a href="#" class="nav-link" tabindex="0"><span class="icon">‚öôÔ∏è</span><span class="text">Configura√ß√µes</span></a>
    </nav>
  </aside>

  <button id="toggleSidebar" aria-label="Ocultar barra lateral" title="Ocultar barra lateral">
    ‚Üê
  </button>

  <main id="content-area" tabindex="0" role="main" aria-live="polite" aria-atomic="true">
    <div class="container-fluid cards row g-4" id="cardsContainer">
      <!-- Cards inseridos via JS -->
    </div>
  </main>

  <!-- Bootstrap JS Bundle -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    const sidebar = document.getElementById('sidebar');
    const toggleSidebarBtn = document.getElementById('toggleSidebar');
    const contentArea = document.getElementById('content-area');

    const funcionalidadesToggle = document.getElementById('funcionalidadesToggle');
    const funcionalidadesSubmenu = document.getElementById('funcionalidadesSubmenu');
    let funcionalidadesExpanded = false;

    funcionalidadesToggle.addEventListener('click', () => {
      funcionalidadesExpanded = !funcionalidadesExpanded;
      funcionalidadesSubmenu.classList.toggle('show', funcionalidadesExpanded);
      funcionalidadesToggle.setAttribute('aria-expanded', funcionalidadesExpanded);
      funcionalidadesToggle.querySelector('span:last-child').textContent = funcionalidadesExpanded ? '‚ñæ' : '‚ñ∏';
    });

    toggleSidebarBtn.addEventListener('click', () => {
      const collapsed = sidebar.classList.toggle('collapsed');
      if (collapsed) {
        toggleSidebarBtn.innerHTML = '‚ñ∂ Mostrar';
        toggleSidebarBtn.setAttribute('aria-label', 'Mostrar barra lateral');
        toggleSidebarBtn.title = 'Mostrar barra lateral';
        contentArea.classList.add('expanded');
      } else {
        toggleSidebarBtn.innerHTML = '‚Üê';
        toggleSidebarBtn.setAttribute('aria-label', 'Ocultar barra lateral');
        toggleSidebarBtn.title = 'Ocultar barra lateral';
        contentArea.classList.remove('expanded');
      }
    });

    // Dados dos cards din√¢micos
    const cardsData = [
      {
        id: 1,
        title: 'Gerenciar Notas',
        description: 'Adicione, edite e remova notas.',
        onClick: () => alert('Gerenciar Notas')
      },
      {
        id: 2,
        title: 'Gerenciar Turmas',
        description: 'Adicione e edite turmas.',
        onClick: () => alert('Relat√≥rios')
      },
      {
        id: 3,
        title: 'Perfil do Usu√°rio',
        description: 'Configure suas informa√ß√µes pessoais.',
        onClick: () => alert('Perfil do Usu√°rio')
      },
      {
        id: 4,
        title: 'Configura√ß√µes',
        description: 'Ajuste as configura√ß√µes do sistema conforme suas necessidades.',
        onClick: () => alert('Configura√ß√µes')
      },
    ];

    // Cria cards dinamicamente
    const cardsContainer = document.getElementById('cardsContainer');

    cardsData.forEach(card => {
      const col = document.createElement('div');
      col.className = 'col-sm-6 col-md-4 col-lg-3';

      const cardEl = document.createElement('div');
      cardEl.className = 'card h-100 shadow p-3';
      cardEl.tabIndex = 0;
      cardEl.setAttribute('role', 'button');
      cardEl.setAttribute('aria-pressed', 'false');

      cardEl.innerHTML = `
        <div class="card-body d-flex flex-column">
          <h5 class="card-title">${card.title}</h5>
          <p class="card-text flex-grow-1">${card.description}</p>
          <button class="card-btn btn mt-auto align-self-start">Abrir</button>
        </div>
      `;

      cardEl.onclick = () => {
        card.onClick();
      };

      cardEl.onkeypress = (e) => {
        if (e.key === 'Enter' || e.key === ' ') {
          e.preventDefault();
          card.onClick();
        }
      };

      cardEl.querySelector('button').onclick = e => {
        e.stopPropagation();
        card.onClick();
      };

      col.appendChild(cardEl);
      cardsContainer.appendChild(col);
    });
  </script>

</body>

</html>
