<!-- Desenvolvido por Murillo -->

<!DOCTYPE html>
<html lang="pt-BR">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Home</title>

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="/public/homecss.css" rel="stylesheet">

</head>

<body>
  <aside id="sidebar" aria-label="Barra lateral principal">
    <div class="sidebar-header" title="Projeto NotaDez">Projeto NotaDez</div>
    <nav>
      <a href="javascript:void(0);" class="nav-link" id="instituicoesToggle" aria-expanded="false"
        aria-controls="instituicoesSubmenu" tabindex="0">
        Instituição
        <span style="margin-left:auto; font-weight: 600; font-size: 0.85rem;">▸</span>
      </a>

      <div class="submenu" id="instituicoesSubmenu" aria-label="Submenu instituições">
        <a href="#" class="nav-link" tabindex="0">Insituição 1</a>
      </div>

      <a href="#" class="nav-link" tabindex="0">
        <span class="text">Disciplinas</span>
      </a>

      <a href="#" class="nav-link" tabindex="0">
        <span class="text">Turmas</span>
      </a>

      <a href="#" class="nav-link" tabindex="0">
        <span class="text">Gerenciar Turmas</span>
      </a>

    </nav>
  </aside>

  <button id="toggleSidebar" aria-label="Ocultar barra lateral" title="Ocultar barra lateral">
    ←
  </button>

  <main id="content-area" tabindex="0" role="main" aria-live="polite" aria-atomic="true">
    <h2 class="instituicao-titulo mb-4">Nome da Instituição 1</h2>
    <div class="container-fluid cards row g-4" id="cardsContainer">
      <!-- Cards inseridos via JS -->
    </div>
  </main>

  <!-- Bootstrap JS Bundle -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>

    // Definir Variaveis
    const sidebar = document.getElementById('sidebar');
    const toggleSidebarBtn = document.getElementById('toggleSidebar');
    const contentArea = document.getElementById('content-area');
    const sideLinks = document.querySelectorAll('#sidebar .nav-link');

    const instituicoesToggle = document.getElementById('instituicoesToggle');
    const instituicoesSubmenu = document.getElementById('instituicoesSubmenu');
    let instituicoesExpanded = false;
    
    // Adiciona link para os elementos da barra lateral
    sideLinks.forEach(link => {
      link.addEventListener('click', function () {
        sideLinks.forEach(l => l.classList.remove('active'));
        this.classList.add('active');
      });
    });

    // Controle do submenu "Instituições"
    instituicoesToggle.addEventListener('click', () => {
      instituicoesExpanded = !instituicoesExpanded;
      instituicoesSubmenu.classList.toggle('show', instituicoesExpanded);
      instituicoesToggle.setAttribute('aria-expanded', instituicoesExpanded);
      instituicoesToggle.querySelector('span:last-child').textContent = instituicoesExpanded ? '▾' : '▸';

      if (instituicoesExpanded) {
        sideLinks.forEach(l => l.classList.remove('active'));
        instituicoesToggle.classList.add('active');
      } else {
        instituicoesToggle.classList.remove('active');
      }
    });

    // Marcar Instituições quando selecionada

    const submenuLinks = instituicoesSubmenu.querySelectorAll('.nav-link');
    submenuLinks.forEach(link => {
      link.addEventListener('click', function (e) {
        sideLinks.forEach(l => l.classList.remove('active'));
        instituicoesToggle.classList.add('active');
      });
    });

    // Barra lateral e Configuração

    toggleSidebarBtn.addEventListener('click', () => {
      const collapsed = sidebar.classList.toggle('collapsed');
      if (collapsed) {
        toggleSidebarBtn.classList.add('collapsed');
        toggleSidebarBtn.innerHTML = '▶ Mostrar';
        contentArea.classList.add('expanded');
      } else {
        toggleSidebarBtn.classList.remove('collapsed');
        toggleSidebarBtn.innerHTML = '←';
        contentArea.classList.remove('expanded');
      }
    });


    // Dados dos cards
    const cardsData = [
      {
        id: 1,
        title: 'Turma 1',
        descriptions: [
          'Código da Turma: 250100'
        ],
        onClick: () => alert('Gerenciar Notas')
      },
      {
        id: 2,
        title: 'Turma 2',
        descriptions: [
          'Código da Turma: 250101'
        ],
        description: 'Código da Turma: 250101',
        onClick: () => alert('Relatórios')
      },
      {
        id: 3,
        title: 'Turma 3',
        descriptions: [
          'Código da Turma: 250102'
        ],
        onClick: () => alert('Perfil do Usuário')
      },
      {
        id: 4,
        title: 'Turma 4',
        descriptions: [
          'Código da Turma: 250103',
        ],
        onClick: () => alert('Configurações')
      },
    ];

  // Função para renderizar um card novo dinamicamente
  function renderCard(card) {
    const col = document.createElement('div');
    col.className = 'col-sm-6 col-md-4 col-lg-3';

    const cardEl = document.createElement('div');
    cardEl.className = 'card h-100 shadow p-3';
    cardEl.tabIndex = 0;
    cardEl.setAttribute('role', 'button');
    cardEl.setAttribute('aria-pressed', 'false');

    cardEl.innerHTML = `
      <div class="card-body d-flex flex-column">
        <h5 class="card-title">${card.title}</h5>
        <div class="card-text flex-grow-1">
          ${card.descriptions.map(desc => `<p>${desc}</p>`).join('')}
        </div>
        <div class="d-flex gap-4 mt-auto">
          <button class="card-btn btn align-self-start">Abrir</button>
          <button class="btn btn-danger btn-trash align-self-start" title="Excluir turma" aria-label="Excluir turma">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 23 24">
              <path d="M5 6h14v2H5zm2 2v12c0 1.104.896 2 2 2h6c1.104 0 2-.896 2-2V8H7zm3 10h2v-8h-2v8zm-2 0h2v-8h-2v8zm4 0h2v-8h-2v8zm-4.293-16.707A.99943.99943 0 007 3c0 .553.447 1 1 1h8c.553 0 1-.447 1-1a.99943.99943 0 00-.293-.707C16.125 1.496 15.573 1 15 1H9c-.573 0-1.125.496-1.293 1.293z"/>
            </svg>
          </button>
        </div>
      </div>
    `;

    // Excluir card ao clicar na lata de lixo
    cardEl.querySelector('.btn-trash').onclick = e => {
      e.stopPropagation(); // evita disparar outros eventos
      col.remove(); // Remove o card (coluna) do DOM
      // Opcional: remova do array cardsData se precisar
    };

    cardEl.onclick = () => {
      card.onClick();
    };

    cardEl.onkeypress = (e) => {
      if (e.key === 'Enter' || e.key === ' ') {
        e.preventDefault();
        card.onClick();
      }
    };

    cardEl.querySelector('button').onclick = e => {
      e.stopPropagation();
      card.onClick();
    };

    col.appendChild(cardEl);
    cardsContainer.appendChild(col);
    return col;
  }

  // Renderiza cards iniciais
  cardsData.forEach(card => {
    renderCard(card);
  });

  // Card adicionar
  const colAdd = document.createElement('div');
  colAdd.className = 'col-sm-6 col-md-4 col-lg-3';
  const cardAdd = document.createElement('div');
  cardAdd.className = 'card h-100 shadow p-3 d-flex justify-content-center align-items-center text-center card-add-turma';
  cardAdd.tabIndex = 0;
  cardAdd.setAttribute('role', 'button');
  cardAdd.setAttribute('aria-pressed', 'false');

  cardAdd.innerHTML = `
    <div class="d-flex flex-column justify-content-center align-items-center h-100 w-100">
      <div style="font-size: 2.8rem; color: #4979d5; margin-bottom: 12px;">+</div>
      <h5 class="card-title mb-3" style="font-weight:700;">Adicionar Turma</h5>
      <p class="card-text" style="color:#4a4a4a; font-size:0.99rem;">Clique para cadastrar uma nova turma.</p>
    </div>
  `;

  cardAdd.onclick = () => {
    const title = prompt('Digite o nome da nova turma:');
    if (!title) return;
    const code = prompt('Digite o código da nova turma:');
    if (!code) return;

    const newCard = {
      id: cardsData.length + 1,
      title: title,
      descriptions: [`Código da Turma: ${code}`],
      onClick: () => alert(`Abrindo turma: ${title}`),
    };
    cardsData.push(newCard);

    // Remove temporariamente o card "Adicionar Turma"
    cardsContainer.removeChild(colAdd);

    // Renderiza novo card (fica no fim)
    renderCard(newCard);

    // Recoloca o card "Adicionar Turma" no final
    cardsContainer.appendChild(colAdd);
  };

  colAdd.appendChild(cardAdd);
  cardsContainer.appendChild(colAdd);

  </script>

</body>

</html>